1.3-1.3.M01 (2011-01-27)
------------------------
o Added an example of an ordered traversal.

1.2-1.2.M06 (2010-12-21)
--------------------

- Kernel
o Fixed an issues with PruneEvaluators getting invoked with the start node as argument.
PruneEvaluators was never invoked with the start node before the arrival of Evaluator interface.
o Added logging of recovery completion.
o Added TransactionData#isDeleted(Node) and #isDeleted(Relationship) and also made
the collection to hold these a HashSet instead of ArrayList. This allows fast
lookups for asking if a node/relationship is deleted in a transaction.
o More flexible caching (can instantiate an arbitrary Cache object).

- Shell
o Fixed a problem where ShellServerExtension assumed the shell was enabled during shutdown, which could result in NPE.

- Lucene-index
o More flexible caching (can instantiate an arbitrary Cache object).
o Merged the fast-writes branch. Basically it makes committing changes to lucene indexes
  faster and more throughput-friendly for multiple threads. The performance improvement
  for committing lucene transactions shows best for small transactions, but will improve
  all modifying operations to lucene indexes.
o Fixed bug which could close an IndexSearcher before it was supposed to when
  there was exactly one item in the result set, two or more threads did this at
  the same time as there was another thread doing an update... AND the reading
  threads all called IndexHits#getSingle() on the result.

- HA
o When a new master is chosen, slaves throws away the id allocations they got from the previous master. This fixes a problem where occupied ids where reused.
o Enabled (and fixed problem with) thread on master which checks for dead slave connections and rolls back those transactions, so that their locks are released.
  This fixes a problem where an HA cluster would seem to freeze up and become unresponsive to write requests.
o Adding Log4j and Netty license information.
o Also closes the executor containing the connections.
o Changed dependency scopes.
o Shuts down databases after verifying them.

1.2.M05 (2010-12-02)
--------------------

o made examples easier to read (selfcontained, explicit)

1.2.M04 (2010-11-18)
--------------------
o added example to via REST connect to neo4j server from Java
o added more configuration options to neo4j-lucene-index
o generating javadocs for all components automatically to components.neo4j.org/{component-name}
o Added ImpermanentGraphDatabase to aid in testing

1.2.M03 (2010-11-04)
--------------------
- New components
o Neo4j Management, making the use of JMX and other
  management features easier
  
- Important changes
o Included code examples properly licensed under Apache license version 2
o Added ability to get the name and configuration of existing integrated indexes.

1.2.M02 (2010-10-21)
--------------------

-New components
o Lucene index, an implementation of the integrated index framework
  using lucene as backend. Planned to replace current index service.

-Important changes
o Fixed shutdown issue regarding UDC leaving a thread running.
o A new index framework integrated into the kernel API.
o Getting relationships is faster due to less cache lookups.

1.2.M01 (2010-10-08)
--------------------

-New components
o Udc

-Important changes
o Index:
   - Lucene version upgraded to 3.0.1
o Shell:
   - Apps discoverable with service locator
   - Added read-only mode on server
   - 'host' and 'config' options
o Graph-algo:
   - Find paths of certain length
o Kernel:
   - Lower memory footprint
   - Higher throughput/concurrency for reads
   - Common interface for loading kernel extensions (f.ex. shell)

1.1 (2010-07-29)
----------------

-New components
o Graph-algo
o Online-backup

1.0 (2010-02-16)
----------------

-Initial components
o Kernel
o Index
o Remote-graphdb
o Shell
